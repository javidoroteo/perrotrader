generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model QuizSession {
  id                String           @id @default(uuid())
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  expiresAt         DateTime
  currentQuestionId Int?
  isCompleted       Boolean          @default(false)
  totalScore        Int              @default(0)
  experienceScore   Int              @default(0)
  cryptoScore       Int              @default(0)
  timeValue         Int              @default(0)
  emergencyFund     Int              @default(0)
  esgValue          Int              @default(0)
  pensionFund       Int              @default(0)
  dividend          Int              @default(0)
  age               Int              @default(0)
  gold              Int              @default(0)
  buyHouse          Int              @default(0)
  childrenEducation Int              @default(0)
  wealthGrowth      Int              @default(0)
  riskProfile       String?
  portfolioData     String?
  email             String?
  personalityTest   PersonalityTest?
  answers           QuizAnswer[]

  @@map("quiz_sessions")
}

model QuizAnswer {
  id                String      @id @default(uuid())
  sessionId         String
  questionId        Int
  answerIndex       Int
  answerText        String
  points            Int         @default(0)
  conoPoints        Int         @default(0)
  exPoints          Int         @default(0)
  cryptoExposure    Int         @default(0)
  timeValue         Int         @default(0)
  emergencyFund     Int         @default(0)
  pensionFund       Int         @default(0)
  dividend          Int         @default(0)
  childrenEducation Int         @default(0)
  wealthGrowth      Int         @default(0)
  buyHouse          Int         @default(0)
  esgValue          Int         @default(0)
  age               Int         @default(0)
  gold              Int         @default(0)
  createdAt         DateTime    @default(now())
  session           QuizSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@map("quiz_answers")
}

model PersonalityTest {
  id            String      @id @default(uuid())
  sessionId     String      @unique
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  completed     Boolean     @default(false)
  currentBlock  Int         @default(1)
  planningScore Int         @default(0)
  analysisScore Int         @default(0)
  autonomyScore Int         @default(0)
  ambitionScore Int         @default(0)
  archetype     String?
  archetypeName String?
  responses     String?
  session       QuizSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@map("personality_tests")
}

model QuizStats {
  id             String   @id @default(uuid())
  completedAt    DateTime @default(now())
  riskProfile    String
  finalScore     Int
  ageRange       String?
  patrimonyRange String?
  monthlyIncome  String?

  @@map("quiz_stats")
}
